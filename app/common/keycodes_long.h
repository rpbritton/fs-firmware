/**
 * Copyright 2021 Ryan Britton
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef COMMON_KEYCODES_LONG_H_
#define COMMON_KEYCODES_LONG_H_

enum KEYCODES_LONG
{
	KEYBOARD_RESERVED = 0x00,
	KEYBOARD_ERROR_ROLL_OVER,
	KEYBOARD_POST_FAIL,
	KEYBOARD_ERROR_UNDEFINED,
	KEYBOARD_A, // a and A
	KEYBOARD_B, // b and B
	KEYBOARD_C, // c and C
	KEYBOARD_D, // d and D
	KEYBOARD_E, // e and E
	KEYBOARD_F, // f and F
	KEYBOARD_G, // g and G
	KEYBOARD_H, // h and H
	KEYBOARD_I, // i and I
	KEYBOARD_J, // j and J
	KEYBOARD_K, // k and K
	KEYBOARD_L, // l and L
	KEYBOARD_M, // m and M
	KEYBOARD_N, // n and N
	KEYBOARD_O, // o and O
	KEYBOARD_P, // p and P
	KEYBOARD_Q, // q and Q
	KEYBOARD_R, // r and R
	KEYBOARD_S, // s and S
	KEYBOARD_T, // t and T
	KEYBOARD_U, // u and U
	KEYBOARD_V, // v and V
	KEYBOARD_W, // w and W
	KEYBOARD_X, // x and X
	KEYBOARD_Y, // y and Y
	KEYBOARD_Z, // z and Z
	KEYBOARD_1, // 1 and !
	KEYBOARD_2, // 2 and @
	KEYBOARD_3, // 3 and #
	KEYBOARD_4, // 4 and $
	KEYBOARD_5, // 5 and %
	KEYBOARD_6, // 6 and ^
	KEYBOARD_7, // 7 and &
	KEYBOARD_8, // 8 and *
	KEYBOARD_9, // 9 and (
	KEYBOARD_0, // 0 and )
	KEYBOARD_ENTER,
	KEYBOARD_ESCAPE,
	KEYBOARD_BACKSPACE,
	KEYBOARD_TAB,
	KEYBOARD_SPACEBAR,
	KEYBOARD_MINUS, // - and _
	KEYBOARD_EQUAL, // = and +
	KEYBOARD_LEFT_BRACKET, // [ and {
	KEYBOARD_RIGHT_BRACKET, // ] and }
	KEYBOARD_BACKSLASH, // \ and |
	KEYBOARD_NON_US_POUND, // Non-US # and ~
	KEYBOARD_SEMICOLON, // ; and :
	KEYBOARD_SINGLE_QUOTE, // ' and "
	KEYBOARD_GRAVE, // ` and ~
	KEYBOARD_COMMA, // , and <
	KEYBOARD_DOT, // . and >
	KEYBOARD_FORWARDSLASH, // / and ?
	KEYBOARD_CAPS_LOCK,
	KEYBOARD_F1,
	KEYBOARD_F2,
	KEYBOARD_F3,
	KEYBOARD_F4,
	KEYBOARD_F5,
	KEYBOARD_F6,
	KEYBOARD_F7,
	KEYBOARD_F8,
	KEYBOARD_F9,
	KEYBOARD_F10,
	KEYBOARD_F11,
	KEYBOARD_F12,
	KEYBOARD_PRINT_SCREEN,
	KEYBOARD_SCROLL_LOCK,
	KEYBOARD_PAUSE,
	KEYBOARD_INSERT,
	KEYBOARD_HOME,
	KEYBOARD_PAGE_UP,
	KEYBOARD_DELETE,
	KEYBOARD_END,
	KEYBOARD_PAGE_DOWN,
	KEYBOARD_RIGHT_ARROW,
	KEYBOARD_LEFT_ARROW,
	KEYBOARD_DOWN_ARROW,
	KEYBOARD_UP_ARROW,
	KEYBOARD_NUM_LOCK, // Num Lock and Clear
	KEYPAD_DIVIDE,
	KEYPAD_MULTIPLY,
	KEYPAD_MINUS,
	KEYPAD_PLUS,
	KEYPAD_ENTER,
	KEYPAD_1, // 1 and End
	KEYPAD_2, // 2 and Down Arrow
	KEYPAD_3, // 3 and PageDn
	KEYPAD_4, // 4 and Left Arrow
	KEYPAD_5,
	KEYPAD_6, // 6 and Right Arrow
	KEYPAD_7, // 7 and Home
	KEYPAD_8, // 8 and Up Arrow
	KEYPAD_9, // 9 and PageUp
	KEYPAD_0, // 0 and Insert
	KEYPAD_DOT, // . and Delete
	KEYBOARD_NON_US_BACKSLASH, // Non-US \ and |
	KEYBOARD_APPLICATION,
	KEYBOARD_POWER,
	KEYPAD_EQUALS,
	KEYBOARD_F13,
	KEYBOARD_F14,
	KEYBOARD_F15,
	KEYBOARD_F16,
	KEYBOARD_F17,
	KEYBOARD_F18,
	KEYBOARD_F19,
	KEYBOARD_F20,
	KEYBOARD_F21,
	KEYBOARD_F22,
	KEYBOARD_F23,
	KEYBOARD_F24,
	KEYBOARD_EXECUTE,
	KEYBOARD_HELP,
	KEYBOARD_MENU,
	KEYBOARD_SELECT,
	KEYBOARD_STOP,
	KEYBOARD_AGAIN,
	KEYBOARD_UNDO,
	KEYBOARD_CUT,
	KEYBOARD_COPY,
	KEYBOARD_PASTE,
	KEYBOARD_FIND,
	KEYBOARD_MUTE,
	KEYBOARD_VOLUME_UP,
	KEYBOARD_VOLUME_DOWN,
	KEYBOARD_LOCKING_CAPS_LOCK,
	KEYBOARD_LOCKING_NUM_LOCK,
	KEYBOARD_LOCKING_SCROLL_LOCK,
	KEYPAD_COMMA,
	KEYPAD_EQUAL_SIGN,
	KEYBOARD_INTERNATIONAL1,
	KEYBOARD_INTERNATIONAL2,
	KEYBOARD_INTERNATIONAL3,
	KEYBOARD_INTERNATIONAL4,
	KEYBOARD_INTERNATIONAL5,
	KEYBOARD_INTERNATIONAL6,
	KEYBOARD_INTERNATIONAL7,
	KEYBOARD_INTERNATIONAL8,
	KEYBOARD_INTERNATIONAL9,
	KEYBOARD_LANG1,
	KEYBOARD_LANG2,
	KEYBOARD_LANG3,
	KEYBOARD_LANG4,
	KEYBOARD_LANG5,
	KEYBOARD_LANG6,
	KEYBOARD_LANG7,
	KEYBOARD_LANG8,
	KEYBOARD_LANG9,
	KEYBOARD_ALTERNATE_ERASE,
	KEYBOARD_SYSREQ,
	KEYBOARD_CANCEL,
	KEYBOARD_CLEAR,
	KEYBOARD_PRIOR,
	KEYBOARD_RETURN,
	KEYBOARD_SEPARATOR,
	KEYBOARD_OUT,
	KEYBOARD_OPER,
	KEYBOARD_CLEAR_AGAIN,
	KEYBOARD_CRSEL,
	KEYBOARD_EXSEL,
	// 165-175: Reserved
	KEYPAD_00 = 0xB0,
	KEYPAD_000,
	KEYBOARD_THOUSANDS_SEPARATOR,
	KEYBOARD_DECIMAL_SEPARATOR,
	KEYBOARD_CURRENCY_UNIT,
	KEYBOARD_CURRENCY_SUB_UNIT,
	KEYPAD_LEFT_PARANTHESES,
	KEYPAD_RIGHT_PARANTHESES,
	KEYPAD_LEFT_CURLY_BRACKET,
	KEYPAD_RIGHT_CURLY_BRACKET,
	KEYPAD_TAB,
	KEYPAD_BACKSPACE,
	KEYPAD_A,
	KEYPAD_B,
	KEYPAD_C,
	KEYPAD_D,
	KEYPAD_E,
	KEYPAD_F,
	KEYPAD_XOR,
	KEYPAD_CARET,
	KEYPAD_PERCENT,
	KEYPAD_LESS_THAN,
	KEYPAD_GREATER_THAN,
	KEYPAD_AND,
	KEYPAD_DOUBLE_AND,
	KEYPAD_PIPE,
	KEYPAD_DOUBLE_PIPE,
	KEYPAD_COLON,
	KEYPAD_POUND,
	KEYPAD_SPACE,
	KEYPAD_AT,
	KEYPAD_EXCLAMATION,
	KEYPAD_MEMORY_STORE,
	KEYPAD_MEMORY_RECALL,
	KEYPAD_MEMORY_CLEAR,
	KEYPAD_MEMORY_ADD,
	KEYPAD_MEMORY_SUBTRACT,
	KEYPAD_MEMORY_MULTIPLY,
	KEYPAD_MEMORY_DIVIDE,
	KEYPAD_PLUS_MINUS,
	KEYPAD_CLEAR,
	KEYPAD_CLEAR_ENTRY,
	KEYPAD_BINARY,
	KEYPAD_OCTAL,
	KEYPAD_DECIMAL,
	KEYPAD_HEXADECIMAL,
	// 222-223: Reserved */
	KEYBOARD_LEFT_CONTROL = 0xE0,
	KEYBOARD_LEFT_SHIFT,
	KEYBOARD_LEFT_ALT,
	KEYBOARD_LEFT_GUI,
	KEYBOARD_RIGHT_CONTROL,
	KEYBOARD_RIGHT_SHIFT,
	KEYBOARD_RIGHT_ALT,
	KEYBOARD_RIGHT_GUI,
};

#endif /* COMMON_KEYCODES_LONG_H_ */
